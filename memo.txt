5pg. 1. 정규 표현식 소개
	줄여서 "정규식". 영문으로는 Regular Expression을 줄여서 RegEx로 표현하기도 한다.
- 정규 표현식은 텍스트로 표현되는 문자열을 검색하는 패턴을 기술하는 특수한 텍스트 문자열이다.
= 탐색기에서 파일을 검색할 때 "*.txt"로 필터링 조건을 입력하면, 확장자가 "txt"인 파일만 목록으로 보여주는 것처럼 "*"와 같은 미리 약속된 문자, 또는 축약 키워드를 사용해 찾고자 하는 문자열 패턴을 설명한 표현이다.

- 정규표현식을 사용하면 문자열에서 단순히 일치하는 텍스트가 포함되어 있는지를 찾는 것보다 복잡하고 정교한 매칭 작업을 수행할 수 있다.
= 예를 들어 사용자가 입력한 문자열이 이메일 주소 작성 규칙에 부합하는지를 확인하는 정규 표현식을 만들어서 사용할 수 있다.

다음 정규 표현식은 대소문자 구분없이 이메일 주소가 맞는지를 확인하는 정규표현식이다.

/^[A-Z0-9._%+-%+-]+@[A-Z0-9.-]+\.[A-Z]{2,6}$/i

어려운 암호 같지만, 각각의 문자들을 고유의 매칭 기능이 있으며, 단 한 줄의 정규표현식으로 이메일 주소 규칙에 맞는 문자열인지를 정확하게 확인할 수 있다.

- 위의 정규 표현식을 프로그래밍 언어로 구현하려면 여러 단계의 문자열 재처리와 함께 복잡하고 긴 조건 체크 코드를 작성해야 한다.
= 기본 원리부터 차례로 배워 나가다 보면 어렵지 않게 작성할 수 있게 된다.

================================================================================
6pg. ==개발언어 지원==
	정규 표현식은 대부분의 최신 개발 언어에서 기본 지원된다. 즉, 한번 배워 두면 두고두고 새로운 개발 언어에서 동일하게 사용할 수 있다.
- Java, C#(.Net), Javascript, Perl, Python, PHP, Rust 등의 언어에서 정규 표현식을 기본 지원한다.
= 정규 표현식은 사용 개발 언어와 무관하게 거의 동일한 작성 규칙을 사용한다. 언어마다 다른 예외적인 몇몇 가지 항목이 있지만 기본적인 사용에 있어서는 무시해도 될 정도이며, 거의 동일한 정규 표현식 문법을 사용한다고 생각하면 된다.

- 대부분의 최신 개발 언어에서 지원하는 정규 표현식은 Perl 스크립트에서 사용하는 정규 표현식 문법을 계승해서 사용한다.
= 배우는 과정에서는 최대한 공통적인 부분을 배우기 때문에 문제가 될 부분이 없지만, 실무에서 사용할 때는 개별 언어별 차이점을 분명히 숙지하고 사용해야 한다.

- PHP의 경우는 내장 정규 표현식을 PCRE(Perl Compatible Regular Expression)라고 한다. 이는 펄 호환 정규 표현식임을 이름에서부터 표시하고 있지만, 미세하게 펄의 정규 표현식과는 다른 부분이 있다.

**Regex101.com**
	2021년부터 알려진 정규 표현식 탑 픽 사이트이다.
- 정규 표현식을 작성하고 결과를 테스트해 볼 수 있는 웹사이트로 개발 언어별 호환성에 따라 구현할 수 있고, 작성한 정규 표현식을 저장해두고 활용하거나 공유할 수도 있다.
= 기능적인 완성도도 매우 뛰어나고, 과거에는 유료 버전으로 구입해서 써야 했던 정규 표현식 작성 전용 프로그램 못지 않은 바른 결과 확인과 폭넓은 호환성 구현이 장점이다.

- 매칭 히스토리 상세내역까지 확인할 수 있기 때문에 정규 표현식을 배우거나 실무에서 활용하려면 필수로 알고 있어야 하는 웹사이트다.
= 이 책에서 작성해보는 정규표현식은 이 사이트에서 입력해 결과를 확인할 수 있다.